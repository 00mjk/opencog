#
# This file provides an example configuration for a production OpenCog
# server. Particularly noteworthy is the list of automatically loaded
# modules.
#
SERVER_PORT           = 17001
LOG_FILE              = /tmp/cogserver.log

# Other possible log levels are "error", "warn", "info", "debug" and "fine"
# LOG_LEVEL             = debug
LOG_LEVEL             = info
LOG_TO_STDOUT         = false
SERVER_CYCLE_DURATION = 100
IDLE_CYCLES_PER_TICK  = 3

# Economic Attention Allocation parameters
STARTING_STI_FUNDS    = 10000
STARTING_LTI_FUNDS    = 10000
STI_FUNDS_BUFFER      = 10000
LTI_FUNDS_BUFFER      = 10000
MIN_STI               = -400

ECAN_MAX_ATOM_STI_RENT      = 15
ECAN_STARTING_ATOM_STI_RENT = 10
ECAN_STARTING_ATOM_LTI_RENT = 0
ECAN_STARTING_ATOM_STI_WAGE = 2
ECAN_STARTING_ATOM_LTI_WAGE = 2

#Used by ImportanceDiffusionAgent class
#0 => flat rent, 1 => exp rent, 2 => log rent, 3 => linear rent
ECAN_RENT_TYPE              = 0
ECAN_RENT_AMNESTY           = 5
ECAN_RENT_EQUATION_PARAMETER_0 = 0.05
ECAN_RENT_EQUATION_PARAMETER_1 = 0.0

#End of ImportanceDiffusionAgent class

#Used by SimpleImportanceDiffusionAgent class
#Maximum percentage of STI that is spread from an atom
ECAN_MAX_SPREAD_PERCENTAGE = 0.6

# If false, will diffuse along hebbian links only. If true,
# will also diffuse to all non-hebbian incident atoms in the
# incoming and outgoing sets
ECAN_SPREAD_HEBBIAN_ONLY = false

# Maximum percentage that will be available for diffusion to hebbian links
HEBBIAN_MAX_ALLOCATION_PERCENTAGE = 0.5
ECAN_CONVERT_LINKS = false
ECAN_CONVERSION_THRESHOLD = 15

# spread deciding function type (HPERBOLIC = 0 and STEP = 1 )
SPREAD_DECIDER_TYPE = 1
#END of SimpleImportanceDiffusionAgent params

#ForgettingAgent params
ECAN_FORGET_PERCENTAGE = 0.001

#END of Economic Attention Allocation parameters

# Use this command PROMPT when telnet/terminal doesn't support ANSI
PROMPT                = "opencog> "
# Prompt with ANSI color codes
ANSI_PROMPT           = "[0;32mopencog[1;32m> [0m"
# Use this guile PROMPT when telnet/terminal doesn't support ANSI
SCM_PROMPT            = "guile> "
# Prompt with ANSI color codes
ANSI_SCM_PROMPT       = "[0;34mguile[1;34m> [0m"
# Global option so that modules know whether they should output ANSI color
# codes
ANSI_ENABLED	       = true

# Cogserver in OSX will automatically change .so extension to .dylib
# if .so exists.
MODULES               = opencog/cogserver/server/libbuiltinreqs.so,
                        opencog/cogserver/modules/libPersistModule.so,
                        opencog/cogserver/modules/libPersistZmqModule.so,
                        opencog/cogserver/modules/libQueryModule.so,
                        opencog/cogserver/shell/libscheme-shell.so,
                        opencog/cogserver/shell/libpy-shell.so,
                        opencog/nlp/types/libnlp-types.so,
                        opencog/cogserver/modules/libLGDictModule.so,
                        opencog/cogserver/modules/libSuRealModule.so,
                        opencog/attention/libattention-types.so,
                        opencog/attention/libattention.so,
                        opencog/embodiment/libembodiment-types.so,
                        opencog/spacetime/libspacetime-types.so,
                        opencog/cogserver/modules/python/libPythonModule.so,
                        opencog/cogserver/modules/libRuleEngineModule.so


# Optional modules, not enabled by default
#                        opencog/cogserver/modules/benchmark/libbenchmark.so,
#                        opencog/moldules/events/libatomspacepublishermodule.so
#                        opencog/attention/libhebbiancreation.so
#                        opencog/learning/dimensionalembedding/libdimensionalembedding.so
#                        opencog/viterbi/libviterbi.so

# The order files should be added is
# 1. Initially scm files from atomspace repo that are installed
# 2. Atom types in this repo
# 3. server/scm/config.scm for configuration of cogserver
# 4. modules from this repo with the order of their dependencies.
# NOTE:
# * Within each category the order may matter, so when you add new files add
#   at the bottom and don't try to keep alphabetical order. Start with the one
#   with the least imported modules.
# * Even when you add new files, you may get error related to files not
#   being found in path. This is due the directory structure in the source
#   isn't similar to that found on installation. As long as you can get
#   access to the function in the cogserver it doesn't matter.
# * If you want to use r2l then install opencog, no way around it for now.
SCM_PRELOAD           = scm/opencog.scm,
                        scm/core_types.scm,
                        scm/core-docs.scm,
                        scm/utilities.scm,
                        scm/apply.scm,
                        scm/file-utils.scm,
                        scm/persistence.scm,
                        scm/config.scm,
                        scm/repl-shell.scm,
                        scm/av-tv.scm,
                        scm/rule-engine-utils.scm,
                        dynamics/attention/attention_types.scm,
                        embodiment/embodiment_types.scm,
                        spacetime/spacetime_types.scm,
                        nlp/types/nlp_types.scm,
                        reasoning/pln/pln_types.scm,
                        nlp/scm/type-definitions.scm,
                        cogserver/server/scm/config.scm,
                        nlp/scm/config.scm,
                        nlp/scm/file-utils.scm,
                        nlp/scm/nlp-utils.scm,
                        nlp/scm/disjunct-list.scm,
                        nlp/scm/processing-utils.scm,
                        nlp/relex2logic/r2l-utilities.scm,
                        nlp/relex2logic/rule-utils.scm,
                        nlp/relex2logic/rule-helpers.scm,
                        nlp/relex2logic/post-processing.scm,
                        nlp/lg-dict/lg-dict.scm,
                        nlp/sureal/surface-realization.scm

#                        nlp/chatbot/chat-utilis.scm,
#                        nlp/chatbot/process-query.scm,
#                        nlp/sureal/sureal.scm
#                        viterbi/viterbi_types.scm

# Uncomment if Python extensions are not stored in these locations,
# or the binary and source directories:
#     /usr/local/share/opencog/python
#     /usr/share/opencog/python
#
# Use a comma separated list for multiple dirs

PYTHON_EXTENSION_DIRS  = ../opencog/python,
                         ../opencog/python/web/api

# NOTE: If you want Python functions to be loaded at startup for acccess by
# Python code that runs via EvaluationLink or GroundedSchemaNode, then place
# them in the PYTHON_PRELOAD_FUNCTIONS directory. PYTHON_PRELOAD is only for
# MindAgent and Request Python handlers.
PYTHON_PRELOAD_FUNCTIONS = ../opencog/python/preload_functions

# Run these python cogserver modules on start up
PYTHON_PRELOAD = pyshell, restapi, agent_finder

# IMPORTANT!
# Database login credentials. Change these to reflect your actual setup!
# For information on how to set up atomspace persistance, see the README
# file in opencog/persist/sql/README.
#
# STORAGE               = "opencog-atomspace"
# STORAGE_USERNAME      = "opencog_user"
# STORAGE_PASSWD        = "asdf"
#
# The sense-similarity tables hold precomputed values or the similarity
# of word WordNet-3.0 senses. These tables are referenced in
# nlp/wsd/SenseSimilaritySQL.cc  These will *eventually* be replaced by
# a persistent opencog table of sense similarities. For now, they remain
# in use.
#
SENSE_SIMILARITY_DB_NAME          = "lexat"
SENSE_SIMILARITY_DB_USERNAME      = "linas"
SENSE_SIMILARITY_DB_PASSWD        = "asdf"

# Parameters for ZeroMQ AtomSpace Event Publisher
ZMQ_EVENT_USE_PUBLIC_IP = TRUE
ZMQ_EVENT_PORT = 5563

# Parameters for RuleEngine
# RULE_ENGINE_TRIGGERED_ON = [1 ,2 ,3]
# 1-when atom added 2-when atom enters to AF 3-both on 1 and 2
RULE_ENGINE_TRIGGERED_ON = 1

# OpenPsi parameters
#PSI_FEELINGS = fear, anger, happiness, sadness
# Complete list of feelings
#PSI_FEELINGS = fear, pride, love, hate, anger, gratitude, happiness, excitement
