
# DO NOT EDIT THIS FILE! This file was automatically generated from atom
# definitions in types.script by the macro OPENCOG_ADD_ATOM_TYPES
#
# This file contains basic python wrappers for atom creation.
#

from opencog.atomspace import AtomSpace, types

atomspace = None
def set_atomspace(new_atomspace):
    global atomspace
    atomspace = new_atomspace

def SpaceMapNode(node_name):
    return atomspace.add_node(types.SpaceMapNode, node_name)
def ObjectNode(node_name):
    return atomspace.add_node(types.ObjectNode, node_name)
def BlockEntityNode(node_name):
    return atomspace.add_node(types.BlockEntityNode, node_name)
def StructureNode(node_name):
    return atomspace.add_node(types.StructureNode, node_name)
def ImaginaryStructureNode(node_name):
    return atomspace.add_node(types.ImaginaryStructureNode, node_name)
def TimeNode(node_name):
    return atomspace.add_node(types.TimeNode, node_name)
def AtTimeLink(*args):
    return atomspace.add_link(types.AtTimeLink, args)
def LatestLink(*args):
    return atomspace.add_link(types.LatestLink, args)
def BeforeLink(*args):
    return atomspace.add_link(types.BeforeLink, args)
def OverlapsLink(*args):
    return atomspace.add_link(types.OverlapsLink, args)
def DuringLink(*args):
    return atomspace.add_link(types.DuringLink, args)
def MeetsLink(*args):
    return atomspace.add_link(types.MeetsLink, args)
def StartsLink(*args):
    return atomspace.add_link(types.StartsLink, args)
def FinishesLink(*args):
    return atomspace.add_link(types.FinishesLink, args)
def EqualsLink(*args):
    return atomspace.add_link(types.EqualsLink, args)
def AfterLink(*args):
    return atomspace.add_link(types.AfterLink, args)
def OverlappedByLink(*args):
    return atomspace.add_link(types.OverlappedByLink, args)
def ContainsLink(*args):
    return atomspace.add_link(types.ContainsLink, args)
def MetByLink(*args):
    return atomspace.add_link(types.MetByLink, args)
def StartedByLink(*args):
    return atomspace.add_link(types.StartedByLink, args)
def FinishedByLink(*args):
    return atomspace.add_link(types.FinishedByLink, args)
